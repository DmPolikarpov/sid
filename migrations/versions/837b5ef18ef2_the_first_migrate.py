"""the first migrate

Revision ID: 837b5ef18ef2
Revises: 
Create Date: 2020-07-03 20:55:31.693520

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '837b5ef18ef2'
down_revision = None
branch_labels = None
depends_on = None


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('share')
    op.drop_table('cash_flow')
    op.drop_table('balance_sheet')
    op.drop_table('company')
    op.drop_table('industry')
    op.drop_table('country')
    # ### end Alembic commands ###


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('country_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='country_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('industry',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('industry_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], name='industry_country_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='industry_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('company',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('company_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('industry_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('decription', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('logo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], name='company_country_id_fkey'),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], name='company_industry_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='company_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('balance_sheet',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('cash_and_cash_equivalents', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('short_term_investments', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('net_receivables', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('inventory', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_current_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_current_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('property_plant_equipment_net', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('goodwill', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('intangible_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('long_term_investments', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tax_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_non_current_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_non_current_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_assets', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('account_payables', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('short_term_debt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('tax_payables', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('deffered_revenue', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_current_liabilities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_current_liabilities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('long_term_debt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('deferred_revenue_non_current', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('deferred_tax_liabilities_non_current', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_non_current_liabilities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_non_current_liabilities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_liabilities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_liabilities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('common_stock', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('retained_earnings', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('accumulated_other_comprehensive_income_loss', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_total_stockholders_equity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_stockholders_equity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_liabilities_and_stockholders_equity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_investments', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('total_debt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('net_debt', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='balance_sheet_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='balance_sheet_pkey')
    )
    op.create_table('cash_flow',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('net_income', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('depreciation_and_amortization', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('deferred_income_tax', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('stock_based_compensation', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('change_in_working_capital', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('accounts_receivables', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_working_capital', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_non_cash_items', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('net_cash_provided_by_operating_activities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('investments_in_property_plant_and_equipment', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('acquisitions_net', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('purchases_of_investments', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_investing_activites', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('net_cash_used_for_investing_activities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('debt_repayment', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('common_stock_issued', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('common_stock_repurchased', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividents_paid', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_financing_activites', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('net_cash_used_provided_by_financing_activities', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('effect_of_forex_changes_on_cash', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('net_change_in_cash', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('cash_at_end_of_period', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('cash_at_beginnig_period', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('operating_cash_flow', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('capital_expenditure', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('free_cash_flow', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='cash_flow_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cash_flow_pkey')
    )
    op.create_table('share',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('trading_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('open_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('high_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('low_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('close_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('volume', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('dividends', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('stock_split', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='share_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='share_pkey')
    )
    # ### end Alembic commands ###
